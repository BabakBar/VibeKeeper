# VibeKeeper: Full App Run Guide (Windows, PowerShell & macOS)

This guide will help you run both the backend (FastAPI) and frontend (Nuxt) locally.

---

## 2. Backend Setup (FastAPI)

### Windows (PowerShell)
1. Open a terminal and navigate to the backend folder:
   ```pwsh
   cd mini-mvp/backend
   ```
3. Install dependencies (recommended: use a virtual environment):
   ```pwsh
   # Create and activate venv (optional but recommended)
   python -m venv .venv
   .venv\Scripts\Activate.ps1
   # Install dependencies
   uv pip install --system --no-deps .
   # Or, to sync exactly with lockfile:
   uv sync
   ```
4. Run the backend server:
   ```pwsh
   uvicorn main:create_app --factory --reload --port 8001
   ```
   The API will be available at http://localhost:8001

### macOS / Linux (bash/zsh)
1. Open a terminal and navigate to the backend folder:
   ```bash
   cd mini-mvp/backend
   ```
2. Copy `.env.example` to `.env` and fill in required values:
   ```bash
   cp .env.example .env
   # Edit .env with your OpenAI key and JWT secret
   ```
3. Install dependencies (recommended: use a virtual environment):
   ```bash
   python3 -m venv .venv
   source .venv/bin/activate
   pip install --system --no-deps .  # (see note below)
   # Or, to sync exactly with lockfile:
   uv sync
   ```
4. Run the backend server:
   ```bash
   uvicorn main:create_app --factory --reload --port 8001
   ```
   The API will be available at http://localhost:8001

---

## 3. Frontend Setup (Nuxt)

1. Open a new terminal and navigate to the frontend folder:
   ```pwsh
   cd mini-mvp/frontend
   ```
2. Install dependencies:
   ```pwsh
   # With bun (recommended)
   bun install
   ```
3. Run the frontend dev server:
   ```pwsh
   # With bun
   bun run dev
   ```
   The app will be available at http://localhost:3000

---

## 4. Usage

- Frontend: http://localhost:3000
- Backend API: http://localhost:8001
- The frontend is configured to use the backend at port 8001 by default.

---

## 5. Troubleshooting

- If you change `.env`, restart the backend.
- Make sure ports 3000 (frontend) and 8001 (backend) are free.
- For database, the default is SQLite (local file). For production, set `DATABASE_URL` in `.env`.

---

## 6. Testing (optional)

- Backend tests:
   ```pwsh
   cd mini-mvp/backend
   pytest
   ```

---

## 7. Stopping

- Press `Ctrl+C` in each terminal to stop the servers.

---

## 8. Notes

- For production, use strong secrets and configure CORS, HTTPS, etc.
- See `docs/` for more details.